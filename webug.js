// Generated by CoffeeScript 1.10.0
(function() {
  (function(win, doc) {
    "user strict";
    var Stack, Webug;
    (function() {
      var bt, css, jq;
      css = doc.createElement('link');
      jq = doc.createElement('script');
      bt = doc.createElement('script');
      css.setAttribute('rel', 'styleSheet');
      css.setAttribute('href', 'bootstrap/css/bootstrap.min.css');
      jq.src = 'jquery.min.js';
      jq.onload = jq.readyreadystatechange = function() {
        if (!jq.readyState || /loaded|complete/.test(jq.readyState)) {
          console.log('jq ok');
          return doc.body.appendChild(bt);
        }
      };
      bt.src = 'bootstrap/js/bootstrap.min.js';
      bt.onload = bt.readyreadystatechange = function() {
        var webug;
        if (!bt.readyState || /loaded|complete/.test(bt.readyState)) {
          console.log('load ok');
          bt.onload = bt.readystatechange = null;
          return webug = new Webug;
        }
      };
      doc.body.appendChild(css);
      return doc.body.appendChild(jq);
    })();
    Stack = (function() {
      function Stack() {
        this.data = [];
        this.index = 0;
      }

      Stack.prototype.push = function(msg) {
        this.data.push(msg);
        return this.index = this.data.length - 1;
      };

      Stack.prototype.up = function() {
        if (this.index !== 0) {
          return this.data[this.index--];
        } else {
          return this.data[this.index];
        }
      };

      Stack.prototype.down = function() {
        if (this.index !== (this.data.length - 1)) {
          return this.data[this.index++];
        } else {
          return this.data[this.index];
        }
      };

      return Stack;

    })();
    return Webug = (function() {
      var CHANGE, CLICK, ERROR, HTML, INPUT, KEYDOWN, MOUSEDOWN, MOUSEMOVE, MOUSEUP, TRUE, UNDEFINED, bind, createLiEle, enumerable, enumerableAndNotEnumerable, getAttrs, getBody, getPropertyName, isArray, isFunction, isNull, isNumber, isObejct, notEnumerable, unbind;

      HTML = '<div id="webug-up" class="progress" style="margin:0;height:8px"> <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 100%;"> </div> </div> <div id="webug-container" class="panel panel-default" style="padding-top:5px;margin:0;"> <div class="btn-group pull-right" role="group" aria-label="..."> <button id="webug-clear" type="button" class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> </button> <button id="webug-close" type="button" class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span></button> </button> </div> <ul id="webug-ul" class="list-group" style="height:150px;overflow-y:scroll;margin: 40px 0 10px"></ul> <div class="input-group input-group-bg"> <span class="input-group-addon ">></span> <input id="webug-input" type="text" class="form-control" placeholder="" aria-describedby="sizing-addon3"> </div> <select id="webug-select" class="form-control" size="" style="width:200px;position:fixed;bottom:40px;left:50px;display:none"></select> </div>';

      UNDEFINED = void 0;

      CLICK = 'click ';

      KEYDOWN = 'keydown ';

      TRUE = 'true ';

      ERROR = 'error ';

      INPUT = 'input ';

      CHANGE = 'change ';

      MOUSEUP = 'mouseup ';

      MOUSEDOWN = 'mousedown ';

      MOUSEMOVE = 'mousemove ';

      bind = function(ele, event, callback) {
        return $(ele).on(event, function(e) {
          return callback(e);
        });
      };

      unbind = function(ele, event, callback) {};

      isNull = function(val) {
        return val === null;
      };

      isArray = Array.isArray;

      isNumber = function(val) {
        return !isNaN(val);
      };

      isObejct = function(val) {
        return typeof val === 'object' && !isFunction(val) && !isNull(val);
      };

      isFunction = function(val) {
        return typeof val === 'function';
      };

      getBody = function() {
        return $('body');
      };

      getAttrs = function(obj) {
        var attr, tmp;
        if (!isObejct(obj)) {
          return [];
        } else {
          attr = [];
          for (tmp in obj) {
            attr.push(tmp);
          }
          console.log(obj);
          return attr;
        }
      };

      enumerable = function(obj, prop) {
        return obj.propertyIsEnumerable(prop);
      };

      notEnumerable = function(obj, prop) {
        return !obj.propertyIsEnumerable(prop);
      };

      enumerableAndNotEnumerable = function() {
        return true;
      };

      getPropertyName = function(obj, iterateSelfBool, iteratePrototypeBool, includePropCb) {
        var i, len, prop, props, ref;
        props = [];
        while (!!obj === true) {
          if (iterateSelfBool === true) {
            ref = Object.getOwnPropertyNames(obj);
            for (i = 0, len = ref.length; i < len; i++) {
              prop = ref[i];
              if (props.indexOf(prop === -1 && includePropCb(obj, prop))) {
                props.push(prop);
              }
            }
          }
          if (iteratePrototypeBool === false) {
            break;
          }
          iterateSelfBool = true;
          obj = Object.getPrototypeOf(obj);
        }
        return props;
      };

      createLiEle = function(val, nor) {
        var cl, li, sp;
        li = $('<li style="padding:5px 15px"></li>');
        sp = '<span class="glyphicon glyphicon-menu-right"></span><span style="margin-left:16px">';
        cl = 'list-group-item ';
        if (nor === false) {
          cl += 'text-danger ';
          sp = '<span class="glyphicon glyphicon-remove"></span><span style="margin-left:16px">';
        } else if (nor === 'result') {
          sp = '<span style="margin-left:30px"></span><span>';
        }
        sp += val + '</span>';
        li.html(sp);
        li.addClass(cl);
        return li;
      };

      Webug.prototype.render = function(msg, console) {
        var data, error, error1;
        if (msg === '') {
          return [true, ''];
        } else {
          if (console == null) {
            this.append(true, msg);
          }
          try {
            data = eval.call(win, msg);
            return ['result', isObejct(data) ? JSON.stringify(data) : isFunction(data) ? !!data.toString ? data.toString() : !!data.valueOf ? data.valueOf() : void 0 : data];
          } catch (error1) {
            error = error1;
            return [false, error];
          }
        }
      };

      Webug.prototype.append = function(trueOrErr, value) {
        var li;
        if (value !== '') {
          li = createLiEle(value, trueOrErr);
          this.ul.append(li);
          return this.scrollBottom();
        }
      };

      Webug.prototype.clear = function() {
        return this.ul.empty();
      };

      Webug.prototype.show = function() {
        this.isHide = false;
        return this.container.show();
      };

      Webug.prototype.hide = function() {
        this.isHide = true;
        return this.container.hide();
      };

      Webug.prototype.searchAttribute = function(val, env) {
        var array, attrs, i, key, len;
        array = [];
        attrs = getPropertyName(env, true, true, enumerableAndNotEnumerable());
        for (i = 0, len = attrs.length; i < len; i++) {
          key = attrs[i];
          if (key.indexOf(val) === 0) {
            array.push(key);
          }
        }
        return array;
      };

      Webug.prototype.appendInSelect = function(array) {
        var all, i, len, size, tmp;
        all = '';
        for (i = 0, len = array.length; i < len; i++) {
          tmp = array[i];
          all += '<option>' + tmp + '</option>';
        }
        this.select.html(all);
        if (array.length > 8) {
          size = 8;
        } else {
          size = array.length + 1;
        }
        this.select.attr('size', size);
        this.controlSelectPos();
        if (size === 1) {
          return this.select.hide();
        } else {
          return this.select.show();
        }
      };

      Webug.prototype.clearSelect = function() {
        this.select.html('');
        return this.select.hide();
      };

      Webug.prototype.clearInput = function() {
        return this.input.val('');
      };

      Webug.prototype.controlSelectPos = function() {
        return this.select.css('left', (this.input.val().length * 5 + 50) + 'px');
      };

      Webug.prototype.inputListner = function(e) {
        var env, pos, tmp, val;
        val = this.input.val();
        if (val.length === 0) {
          return this.select.hide();
        } else {
          pos = val.lastIndexOf('.');
          if (pos === -1) {
            env = win;
            this.env = '';
          } else {
            tmp = val.substring(0, pos);
            this.env = tmp + '.';
            env = eval(tmp);
          }
          val = val.substring(pos + 1, val.length);
          return this.appendInSelect(this.searchAttribute(val, env));
        }
      };


      /* 绑定window，捕捉js报错信息
      errListener: (error) ->
         * 只输出有用的错误信息
        msg = [
          "Error:"
          "filename: #{error.filename}"
          "lineno: #{error.lineno}"
          "message: #{error.message}"
          "type: #{error.type}"
        ]
       */

      Webug.prototype.scrollBottom = function() {
        return this.ul.scrollTop(this.ul.prop('scrollHeight'));
      };

      Webug.prototype.selectPos = function() {
        return this.select;
      };

      function Webug() {
        this.isInit = false;
        this.isHide = false;
        this.msg = '';
        this.body = getBody();
        this.stack = new Stack();
        this.init();
        this.isInit = true;
      }

      Webug.prototype.init = function() {
        var div;
        this.isHide = false;
        this.env = '';
        div = $('<div style="position:fixed;bottom:0;left:0;"></div>');
        div.html(HTML);
        this.body.append(div);
        this.container = $('#webug-container');
        this.btn_clear = $('#webug-clear');
        this.btn_close = $('#webug-close');
        this.input = $('#webug-input');
        this.ul = $('#webug-ul');
        this.select = $('#webug-select');
        this.div_up = $('#webug-up');
        this.is_Mouse_Down = false;
        bind(this.div_up, MOUSEDOWN, (function(_this) {
          return function(e) {
            _this.src_pos_y = e.pageY;
            return _this.is_Mouse_Down = true;
          };
        })(this));
        bind(doc, CLICK + MOUSEUP, (function(_this) {
          return function(e) {
            if (_this.is_Mouse_Down === true) {
              return _this.is_Mouse_Down = false;
            }
          };
        })(this));
        bind(doc, MOUSEMOVE, (function(_this) {
          return function(e) {
            var move_Y;
            if (_this.is_Mouse_Down === true) {
              _this.dest_pos_y = e.pageY;
              move_Y = _this.src_pos_y - _this.dest_pos_y;
              _this.src_pos_y = _this.dest_pos_y;
              return _this.ul.height(_this.ul.height() + move_Y);
            }
          };
        })(this));
        bind(this.btn_clear, CLICK, (function(_this) {
          return function() {
            return _this.clear();
          };
        })(this));
        bind(this.btn_close, CLICK, (function(_this) {
          return function() {
            return _this.hide();
          };
        })(this));
        bind(this.input, KEYDOWN, (function(_this) {
          return function(e) {
            var data;
            if (e.keyCode === 13) {
              _this.msg = _this.input.val();
              _this.stack.push(_this.msg);
              data = _this.render(_this.msg);
              _this.append(data[0], data[1]);
              _this.clearInput();
              return _this.clearSelect();
            } else if (e.keyCode === 38) {
              if (_this.select.is(':hidden')) {
                _this.input.val(_this.stack.up());
                _this.input.prop('selectionStart', _this.input.val().length);
                return e.preventDefault();
              } else {
                return _this.select.focus();
              }
            } else if (e.keyCode === 40) {
              if (_this.select.is(':hidden')) {
                _this.input.val(_this.stack.down());
                _this.input.prop('selectionStart', _this.input.val().length);
                return e.preventDefault();
              } else {
                return _this.select.focus();
              }
            }
          };
        })(this));
        bind(this.input, INPUT, (function(_this) {
          return function(e) {
            return _this.inputListner(e);
          };
        })(this));
        bind(this.select, KEYDOWN, (function(_this) {
          return function(e) {
            if (e.keyCode === 13) {
              _this.input.val(_this.env + _this.select.val());
              _this.input.focus();
              return _this.clearSelect();
            } else if (e.keyCode === 37) {
              _this.input.focus();
              return e.preventDefault();
            }
          };
        })(this));
        bind(this.select, CLICK, (function(_this) {
          return function(e) {
            _this.input.val(_this.select.val());
            return _this.input.focus();
          };
        })(this));
        bind(this.body, KEYDOWN, (function(_this) {
          return function(e) {
            if (e.keyCode === 88 && e.ctrlKey) {
              if (_this.isHide) {
                return _this.show();
              } else {
                return _this.hide();
              }
            }
          };
        })(this));
        return win.console.log = (function(_this) {
          return function(val) {
            var data;
            data = _this.render(val, true);
            _this.append(data[0], data[1]);
            return UNDEFINED;
          };
        })(this);
      };

      Webug;

      return Webug;

    })();
  })(window, document);

}).call(this);

//# sourceMappingURL=webug.js.map
